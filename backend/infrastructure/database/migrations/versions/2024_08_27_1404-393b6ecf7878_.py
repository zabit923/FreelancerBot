"""empty message

Revision ID: 393b6ecf7878
Revises: 80f4a8897505
Create Date: 2024-08-27 14:04:35.802578

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '393b6ecf7878'
down_revision: Union[str, None] = '80f4a8897505'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('category', sa.Enum('ORDER', 'FREELANCER_PROFILE', 'CLIENT_PROFILE', name='questioncategory'), nullable=False),
    sa.Column('section', sa.VARCHAR(length=50), nullable=True),
    sa.Column('question_key', sa.VARCHAR(length=50), nullable=False),
    sa.Column('question_type', sa.Enum('checkbox', 'radio', 'vertical_slider', 'drag_and_drop', 'select', 'text', 'combobox', name='questiontype'), nullable=False),
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('question_description', sa.String(), nullable=True),
    sa.Column('link_url', sa.String(), nullable=True),
    sa.Column('link_text', sa.String(), nullable=True),
    sa.Column('is_required', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('has_text_input', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('text_input_type', sa.Enum('text', 'date', 'number', 'email', 'password', 'tel', 'textarea', name='textinputtype'), nullable=True),
    sa.Column('text_input_description', sa.String(), nullable=True),
    sa.Column('text_input_placeholder', sa.String(), nullable=True),
    sa.Column('has_file_input', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('file_input_types', sa.String(), nullable=True),
    sa.Column('file_input_button_text', sa.String(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.Column('parrent_question_id', sa.Integer(), nullable=True),
    sa.Column('condition_option_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parrent_question_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('question_id'),
    sa.UniqueConstraint('question_key')
    )
    op.create_table('freelancerprofiles',
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('portfolio_link', sa.VARCHAR(length=255), nullable=False),
    sa.Column('profession', sa.Enum('FULL_STACK_DEVELOPER', 'FRONTEND_DEVELOPER', 'BACKEND_DEVELOPER', 'UI_DESIGNER', 'UX_DESIGNER', 'WEB_DESIGNER', 'GRAPHIC_DESIGER', 'DATABASE_ADMINISTRATOR', 'DEVOPS_ENGINEER', 'CLOUD_ARCHITECT', 'SYSTEM_ADMINISTRATOR', 'QA_ENGINEER', 'TEST_AUTOMATION_ENGEER', 'SECURITY_SPECIALIST', 'PERFOMANCE_ENGINEER', 'PROJECT_MANAGER', 'PRODUCT_MANAGER', 'BUSINESS_ANALYST', 'SEO_SPECIALIST', 'CONTENT_STRATEGIST', 'TECHNICAL_WRITER', 'MOBILE_APP_DEVELOPER', 'API_DEVELOPER', 'DATA_SCIENTIST', 'MACHINE_LEARNING_ENGINEER', 'BLOCKCHEIN_DEVELOPER', 'AR_VR_DEVELOPER', 'GAME_DEVELOPER', 'E_COMMERCE_SPECIALIST', 'CMS_DEVELOPER', name='freelancerprofession'), nullable=False),
    sa.Column('bio', sa.VARCHAR(length=500), nullable=True),
    sa.Column('hourly_rate', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('is_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_avaible', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_notifications_enabled', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('freelancer_market_area', sa.Enum('GLOBAL', 'EUROPE', 'ASIA', 'AMERICA', 'AFRIKA', 'AUSTRALIA', name='marketarea'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('profile_id')
    )
    op.create_table('options',
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_key', sa.VARCHAR(length=50), nullable=False),
    sa.Column('option_text', sa.String(), nullable=False),
    sa.Column('subtitle', sa.String(), nullable=True),
    sa.Column('icon_url', sa.String(), nullable=True),
    sa.Column('hint', sa.String(), nullable=True),
    sa.Column('display_order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.question_id'], ),
    sa.PrimaryKeyConstraint('option_id')
    )
    op.create_table('orders',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ON_MODERATION', 'APPROVED', 'COMPLETED', 'ARCHIVED', name='orderstatus'), server_default='DRAFT', nullable=False),
    sa.Column('is_promoted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('promoted_until', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('freelancerskills',
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.VARCHAR(length=20), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['freelancerprofiles.profile_id'], ),
    sa.PrimaryKeyConstraint('skill_id')
    )
    op.create_table('order_countries',
    sa.Column('order_country_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('country_key', sa.VARCHAR(length=20), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.PrimaryKeyConstraint('order_country_id')
    )
    op.create_table('order_responses',
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('selected_option_id', sa.Integer(), nullable=True),
    sa.Column('text_response', sa.VARCHAR(length=500), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.question_id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['options.option_id'], ),
    sa.PrimaryKeyConstraint('response_id')
    )
    op.create_table('orderbids',
    sa.Column('bid_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('freelancer_id', sa.Integer(), nullable=False),
    sa.Column('bid_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('proposal_text', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'DECLINED', name='bidaccessstatus'), server_default='PENDING', nullable=False),
    sa.Column('requested_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('granted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['freelancer_id'], ['freelancerprofiles.profile_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], ),
    sa.PrimaryKeyConstraint('bid_id')
    )
    op.create_table('order_response_files',
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.VARCHAR(length=500), nullable=False),
    sa.ForeignKeyConstraint(['response_id'], ['order_responses.response_id'], ),
    sa.PrimaryKeyConstraint('file_id')
    )
    op.alter_column('users', 'user_id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_table('order_response_files')
    op.drop_table('orderbids')
    op.drop_table('order_responses')
    op.drop_table('order_countries')
    op.drop_table('freelancerskills')
    op.drop_table('orders')
    op.drop_table('options')
    op.drop_table('freelancerprofiles')
    op.drop_table('questions')
    # ### end Alembic commands ###
